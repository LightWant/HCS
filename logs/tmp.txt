data/my/5.txt
load graph: n 6 m 20 maxD 4
k: 2 q: 1
0:2 3 4 5 
1:2 4 
2:0 1 4 5 
3:0 5 
4:0 1 2 5 
5:0 2 3 4 
    start 0 0
C:2 3 4 5 
P:0 
X:
here
edX 0, edC 4
here
here
C:2 3 4 5 
P:0 
X:
neighbors in P:
6 6 6 6 

here
neighbors in P:
1 1 1 1 

C:2 3 4 5 1 
P:0 
X:
sg:
2:0 1 4 5 
3:0 5 
4:0 1 2 5 
5:0 2 3 4 
1:2 4 
0:2 3 4 5 
neighbors in P:
1 1 1 1 0 

deep 0
C:2 3 4 5 1 
P:0 
X:
minDPC: 2
maxD 3, pv 2
cand:2 3 
    deep 0-0, cand 2
deep 0
C:2 3 4 5 1 
P:0 
X:
deep0: 2 nei/non-nei in P:0  / 2 
update 2:
w:2, edP:2, neighborsInP[w]:1
update 2:
w:2, edP:2, neighborsInP[w]:1
step2: j1, C[j]0:
step2: j3, C[j]4:connected 
step2: j4, C[j]8:
step2: j5, C[j]12:
deep 1
C:1 3 4 5 
P:0 2 
X:
minDPC: 2
maxD 2, pv 4
cand:3 4 
    deep 1-0, cand 3
deep 1
C:1 3 4 5 
P:0 2 
X:
deep1: 3 nei/non-nei in P:0  / 2 3 
update 3:
w:2, edP:3, neighborsInP[w]:1
w:3, edP:3, neighborsInP[w]:1
update 3:
w:2, edP:3, neighborsInP[w]:1
w:3, edP:3, neighborsInP[w]:1
step2: j5, C[j]0:
deep 2
C:5 
P:0 2 3 
X:
minDPC: 2
maxD 0, pv 5
P 0 inP 3
P 2 inP 2
P 3 inP 2
P 5 inP 3
    P+C is ans
    deep 1-1, cand 4
deep 1
C:5 4 1 
P:0 2 
X:3 
deep1: 4 nei/non-nei in P:0 2  / 4 
update 4:
w:4, edP:3, neighborsInP[w]:2
update 4:
w:4, edP:3, neighborsInP[w]:2
step2: j5, C[j]0:
step2: j1, C[j]4:
step2: j3, X[j]0:connected edP 3, 3, 1
deep 2
C:5 1 
P:0 2 4 
X:
minDPC: 2
maxD 0, pv 5
cand:5 1 
    deep 2-0, cand 5
deep 2
C:5 1 
P:0 2 4 
X:
deep2: 5 nei/non-nei in P:0 2 4  / 5 
update 5:
w:5, edP:4, neighborsInP[w]:3
update 5:
w:5, edP:4, neighborsInP[w]:3
step2: j1, C[j]0:connected edP 4, 1, 2
deep 3
C:
P:0 2 4 5 
X:
    edC == 0
    P is ans!
    deep 2-1, cand 1
deep 2
C:1 
P:0 2 4 
X:5 
deep2: 1 nei/non-nei in P:2 4  / 0 1 
update 1:
w:0, edP:4, neighborsInP[w]:2
w:1, edP:4, neighborsInP[w]:2
update 1:
w:0, edP:4, neighborsInP[w]:2
w:1, edP:4, neighborsInP[w]:2
deep 3
C:
P:2 4 0 1 
X:
    edC == 0
    P is ans!
    deep 0-1, cand 3
deep 0
C:1 5 4 3 
P:0 
X:2 
deep0: 3 nei/non-nei in P:0  / 3 
update 3:
w:3, edP:2, neighborsInP[w]:1
update 3:
w:3, edP:2, neighborsInP[w]:1
step2: j1, C[j]0:connected edP 2, 1, 0
step2: j4, C[j]0:connected 
step2: j5, C[j]4:
step2: j2, X[j]0:connected 
deep 1
C:4 5 
P:0 3 
X:2 
minDPC: 2
maxD 1, pv 4
P 0 inP 3
P 3 inP 2
P 4 inP 2
P 5 inP 3
    P+C is ans
    start 1 4
C:2 4 
P:1 
X:
here
edX 0, edC 2
here
here
C:2 4 
P:1 
X:
neighbors in P:
6 6 

here
neighbors in P:
1 1 

C:2 4 5 3 
P:1 
X:0 
sg:
2:0 1 4 5 
4:0 1 2 5 
5:0 2 3 4 
3:0 5 
0:2 3 4 5 
1:2 4 
neighbors in P:
1 1 0 0 
0 
deep 0
C:2 4 5 3 
P:1 
X:0 
minDPC: 1
maxD 3, pv 5
cand:5 3 
    deep 0-0, cand 5
deep 0
C:2 4 5 3 
P:1 
X:0 
deep0: 5 nei/non-nei in P: / 1 5 
update 5:
w:1, edP:2, neighborsInP[w]:0
w:5, edP:2, neighborsInP[w]:0
update 5:
w:1, edP:2, neighborsInP[w]:0
w:5, edP:2, neighborsInP[w]:0
step2: j2, C[j]0:
step2: j4, C[j]4:
deep 1
C:2 4 
P:1 5 
X:
minDPC: 2
maxD 1, pv 2
P 1 inP 2
P 5 inP 2
P 2 inP 3
P 4 inP 3
    P+C is ans
    deep 0-1, cand 3
deep 0
C:2 4 3 
P:1 
X:0 5 
deep0: 3 nei/non-nei in P: / 1 3 
update 3:
w:1, edP:2, neighborsInP[w]:0
w:3, edP:2, neighborsInP[w]:0
update 3:
w:1, edP:2, neighborsInP[w]:0
w:3, edP:2, neighborsInP[w]:0
deep 1
C:
P:1 3 
X:
    edC == 0
    start 2 5
C:4 5 
P:2 
X:0 1 
here
edX 2, edC 2
here
here
C:4 5 
P:2 
X:0 1 
neighbors in P:
6 6 
6 6 
here
neighbors in P:
1 1 
1 1 
C:4 5 3 
P:2 
X:0 1 
sg:
4:0 1 2 5 
5:0 2 3 4 
3:0 5 
0:2 3 4 5 
1:2 4 
2:0 1 4 5 
neighbors in P:
1 1 0 
1 1 
deep 0
C:4 5 3 
P:2 
X:0 1 
minDPC: 1
maxD 2, pv 5
cand:5 
    deep 0-0, cand 5
deep 0
C:4 5 3 
P:2 
X:0 1 
deep0: 5 nei/non-nei in P:2  / 5 
update 5:
w:5, edP:2, neighborsInP[w]:1
update 5:
w:5, edP:2, neighborsInP[w]:1
step2: j4, C[j]0:
step2: j3, C[j]4:
step2: j0, X[j]0:
step2: j1, X[j]4:connected 
deep 1
C:4 3 
P:2 5 
X:0 1 
minDPC: 1
maxD 0, pv 4
cand:4 3 
    deep 1-0, cand 4
deep 1
C:4 3 
P:2 5 
X:0 1 
deep1: 4 nei/non-nei in P:2 5  / 4 
update 4:
w:4, edP:3, neighborsInP[w]:2
update 4:
w:4, edP:3, neighborsInP[w]:2
step2: j3, C[j]0:connected edP 3, 3, 1
step2: j0, X[j]0:
step2: j1, X[j]4:
deep 2
C:
P:2 5 4 
X:0 1 
    edC == 0
    deep 1-1, cand 3
deep 1
C:3 
P:2 5 
X:0 1 4 
deep1: 3 nei/non-nei in P:5  / 2 3 
update 3:
w:2, edP:3, neighborsInP[w]:1
w:3, edP:3, neighborsInP[w]:1
update 3:
w:2, edP:3, neighborsInP[w]:1
w:3, edP:3, neighborsInP[w]:1
step2: j0, X[j]0:
deep 2
C:
P:5 2 3 
X:0 
    edC == 0
    start 3 5
C:5 
P:3 
X:0 
here
edX 1, edC 1
here
here
C:5 
P:3 
X:0 
neighbors in P:
6 
6 
here
neighbors in P:
1 
1 
C:5 4 
P:3 
X:0 2 1 
sg:
5:0 2 3 4 
4:0 1 2 5 
0:2 3 4 5 
2:0 1 4 5 
1:2 4 
3:0 5 
neighbors in P:
1 0 
1 0 0 
deep 0
C:5 4 
P:3 
X:0 2 1 
minDPC: 1
maxD 1, pv 5
P 3 inP 1
P 5 inP 2
P 4 inP 1
X 0 inP 3
0 in X has 0 nonNeighbors
    P+C is not ans!
    start 4 5
C:5 
P:4 
X:0 1 2 
here
edX 3, edC 1
here
here
C:5 
P:4 
X:0 1 2 
neighbors in P:
6 
6 6 6 
here
neighbors in P:
1 
1 1 1 
C:5 
P:4 
X:0 1 2 3 
sg:
5:0 2 3 4 
0:2 3 4 5 
1:2 4 
2:0 1 4 5 
3:0 5 
4:0 1 2 5 
neighbors in P:
1 
1 1 1 0 
deep 0
C:5 
P:4 
X:0 1 2 3 
minDPC: 1
maxD 0, pv 5
P 4 inP 1
P 5 inP 1
X 0 inP 2
X 1 inP 1
X 2 inP 2
X 3 inP 1
0 in X has 0 nonNeighbors
    P+C is not ans!
    start 5 5
C:
P:5 
X:0 2 3 4 
here
edX 4, edC 0
here
here
C:
P:5 
X:0 2 3 4 
neighbors in P:

6 6 6 6 
here
neighbors in P:

1 1 1 1 
C:
P:5 
X:0 2 3 4 
sg:
0:2 3 4 5 
2:0 4 5 
3:0 5 
4:0 2 5 
5:0 2 3 4 
neighbors in P:

1 1 1 1 
deep 0
C:
P:5 
X:0 2 3 4 
    edC == 0
time:0ms
Maximal K-Plex Count: 5
